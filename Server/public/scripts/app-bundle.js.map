{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","List","todos","parse","getItem","showList","showCompleted","priorities","activate","getUserTodos","_id","createTodo","todoObj","todo","description","dateDue","Date","priority","editTodo","saveTodo","alert","todoId","filesToUpload","length","uploadFile","deleteTodo","completeTodo","completed","toggleShowCompleted","changeFiles","Array","push","files","removeFile","index","splice","logout","back","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","ToDos","TODO_SERVICE","todosArray","id","userId","formData","FormData","forEach","item","i","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n        route: ['', 'home'],\n        moduleId: './modules/home',\n        name: 'Home' \n      },\n      {\n        route: 'list',\n        moduleId: './modules/list',\n        name: 'List' ,\n        auth: true\n     }\n    ]);\n  }\n}\n//He re uploaded the power point ","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\nimport config from './auth-config';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Users} from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n\tconstructor(router,users, auth){\r\n        this.router = router;\r\n        this.auth = auth;\r\n        this.loginError = '';    \r\n        this.users = users;\r\n        this.message = \"Home\";\r\n        this.showLogin = true;\r\n        \r\n    }\r\n\r\n\r\n    login() {\r\n        return this.auth.login(this.email, this.password)\r\n          .then(response => {\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n        this.loginError = \"\";\r\n        this.router.navigate('list');\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.loginError = \"Invalid credentials.\";\r\n          });\r\n      };\r\n    \r\n    showRegister(){\r\n        this.user = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n            }\r\n        this.registerError = \"\";\r\n            \r\n        this.showLogin = false;\r\n    }\r\n    async save() {\r\n              let serverResponse = await this.users.save(this.user);\r\n              if (!serverResponse.error) {\r\n                this.showLogin = true;\r\n              } else {\r\n                this.registerError = \"There was a problem registering the user.\"\r\n              }\r\n    }\r\n\r\n        \r\n    \r\n    \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {ToDos} from '../resources/data/todos';\r\n\r\n//may have to update look ate home.js slide from aurelia authentication presentation\r\n@inject(ToDos, Router)\r\nexport class List {\r\n\tconstructor(todos, router){\r\n        this.todos = todos;        \r\n        this.router = router;\r\n        this.message = \"List\";\r\n        this.user = JSON.parse(sessionStorage.getItem('user'));\r\n\t\tthis.showList = true;\r\n\t\tthis.showCompleted = false;\t\t\r\n        this.priorities =['Low', 'Medium', 'High', 'Critical'];\r\n    }\r\n    \r\n    async activate(){\r\n\t\tawait this.todos.getUserTodos(this.user._id);\r\n\t}\r\n\r\n    createTodo(){\t\r\n\t\tthis.todoObj = {\r\n\t\t\ttodo: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\tdateDue: new Date(),\r\n\t\t\t user: this.user._id,\r\n\t\t\t \r\n\t\t\tpriority: this.priorities[0]\r\n\t\t}\r\n\t\tthis.showList = false;\t\t\r\n\t}\r\n\t\r\n\t    editTodo(todo){\r\n\t\t        this.todoObj = todo;\r\n\t\t        this. showList = false;\r\n\t\t    }\r\n\t\t\r\n    async saveTodo(){\r\n\t\tif(this.todoObj){\t\t\r\n\t\t\tlet response = await this.todos.save(this.todoObj);\r\n\t\t\tif(response.error){\r\n\t\t\t\talert(\"There was an error creating the ToDo\");\r\n\t\t\t} else {\r\n\t\t\t\t var todoId = response._id;\r\n\t\t\t\t if(this.filesToUpload && this.filesToUpload.length){\r\n\t\t\t\t     await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\r\n\t\t\t\t     this.filesToUpload = [];\r\n\t\t\t\t }\r\n\t\t\t\t//Could provide feeback\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.showList = true;\r\n\t\t}\r\n\t}\r\n\tdeleteTodo(todo){\r\n\t\t      this.todos.deleteTodo(todo._id);\r\n\t\t }\r\n\tcompleteTodo(todo){\r\n\t\t\t  todo.completed = !todo.completed;\r\n\t\t\t  this.todoObj = todo;\r\n\t\t\t  this.saveTodo();\r\n\t\t}\r\n\ttoggleShowCompleted(){\r\n\t\t   \t  this.showCompleted = !this.showCompleted;\r\n\t\t}\r\n\t\t\t\t\t\t\r\n\tchangeFiles(){\r\n\t\t\t  this.filesToUpload = new Array(); \r\n\t\t\t  this.filesToUpload.push(this.files[0]);\r\n\t\t\t}\r\n\tremoveFile(index){\r\n\t\t\t  this.filesToUpload.splice(index,1);\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n    logout(){\r\n\t\tthis.router.navigate('home');\r\n\t}\r\n\tback(){\r\n\t\tthis.showList=true\r\n\t}\r\n    \r\n}\r\n","  export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n\t\tthis.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        \r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                .withInterceptor({\r\n                request(request) {\r\n                    var authHeader = 'Bearer' + localStorage.getItem('aurelia_token')\r\n                    request.headers.append('Authorization', authHeader);\r\n                    console.log(`Requesting ${request.method} ${request.url}`);\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log(`Received ${response.status} ${response.url}`);\r\n                    return response;\r\n                }\r\n                });\r\n            });\r\n        }\r\n        get(url) {\r\n            return this.httpClient.fetch(url)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    return data;\r\n                })\r\n                .catch(error => {\r\n                    return error;\r\n                });\r\n        }\r\n        post(content, url) {\r\n            return this.httpClient\r\n                .fetch(url, {\r\n                    method: 'post',\r\n                    body: json(content)\r\n                })\r\n                .then(response => response.json())\r\n                .then(object => {\r\n                    return object;\r\n                })\r\n                .catch(error => {\r\n                    return error;\r\n                });\r\n        }\r\n        put(content, url) {\r\n            return this.httpClient\r\n                .fetch(url, {\r\n                    method: 'put',\r\n                    body: json(content)\r\n                })\r\n                .then(response => response.json())\r\n                .then(object => {\r\n                    return object;\r\n                })\r\n                .catch(error => {\r\n                    return error;\r\n                });\r\n        }\r\n        delete(url) {\r\n            return this.httpClient\r\n                .fetch(url, {\r\n                    method: 'delete'\r\n                })\r\n                .then(response => response.json())\r\n                .then(object => {\r\n                    return object;\r\n                })\r\n                .catch(error => {\r\n                    return error ;\r\n                });\r\n        }\r\n        uploadFiles(files, url){\r\n                return this.httpClient\r\n                .fetch(url, {\r\n                    method: 'post',\r\n                    body: files\r\n                })\r\n                .then(response => response.json())\r\n                .then(object => {\r\n                    return object;\r\n                })\r\n                .catch(error => {\r\n                    return error;\r\n                });\r\n            }\r\n            \r\n\t}\r\n\r\n\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class ToDos {\r\n \r\n    constructor(data) {\r\n        \t\tthis.data = data;\r\n        \t\tthis.TODO_SERVICE = 'todos'; \r\n                this.todosArray = []\r\n   \t\t }\r\n\r\n        async getUserTodos(id){\r\n            let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n            if(!response.error && !response.message){\r\n                this.todosArray = response;\r\n            }\r\n        }\r\n\r\n        async save(todo){\r\n                if(todo){\r\n                if(!todo._id){\r\n                    let serverResponse = await this.data.post(todo, this.TODO_SERVICE);\r\n                            if(! serverResponse.error){\r\n                            this.todosArray.push(serverResponse);\r\n                             }\r\n                            return serverResponse;\r\n                } else {\r\n                    let serverResponse = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\r\n                            if(! serverResponse.error){\r\n                            \r\n                             }\r\n                            return serverResponse;\r\n                }\r\n                    \r\n                }\r\n            }\r\n            \r\n            async uploadFile(files, userId, todoId){\r\n                        let formData = new FormData();\r\n                        files.forEach((item, index) => {\r\n                        formData.append(\"file\" + index, item);\r\n                        });    \r\n                    let response = await this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\r\n                    return response;\r\n                }\r\n                \r\n            async deleteTodo(id){\r\n                let response = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\r\n                if(!response.error){\r\n                    for(let i = 0; i < this.todosArray.length; i++){\r\n                        if(this.todosArray[i]._id === id){\r\n                            this.todosArray.splice(i,1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        \r\n        }\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n    //async and await stops until response is recieved \r\n    async save(user){\r\n        if(user){\r\n            try{\r\n                let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n                return serverResponse;\r\n            } catch (error) {\r\n                console.log(error);\r\n                return error;\r\n        }\r\n    }\r\n}\r\n\r\n}\r\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\nconstructor(element) {\r\n  this.element = element;\r\n}\r\n        bind() {\r\n               const defaultConfig = {\r\n                     altInput: true,\r\n                     altFormat: \"F j, Y\",\r\n                    wrap: true\r\n                    };\r\n                    this._config = Object.assign({}, defaultConfig);\r\n                    this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n        }\r\n        attached() {\r\n                    this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n                 }\r\n        onChange(selectedDates, dateStr, instance) {\r\n                        this.value = selectedDates[0] \r\n                }\r\n        valueChanged() {\r\n                if (!this.flatpickr) {\r\n                    return;\r\n                }\r\n                if (this.value === this.flatpickr.selectedDates[0]){\r\n                    return;\r\n                }\r\n                let newDate = this.value ? this.value : undefined;      \r\n                this.flatpickr.setDate(newDate);\r\n            }\r\n        }\r\n            \r\n","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\nexport class DateFormatValueConverter {\r\ntoView(value) {\r\nif(value === undefined || value === null){\r\n\treturn;\r\n    \t\t}\r\n    \r\n    \t\treturn moment(value).format('MMM Do YYYY');\r\n\t}\r\n}\r\n"],"sourceRoot":".."}